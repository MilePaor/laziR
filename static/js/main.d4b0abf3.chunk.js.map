{"version":3,"sources":["images/lazi.png","images/up-arrow.svg","serviceWorker.js","components/Nav.js","components/NewsItem.js","components/News.js","components/WeatherWidget.js","components/loader.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","NavLogo","styled","div","_templateObject","NavLogoImg","img","_templateObject2","Nav","_ref","handleSourceChange","sourceList","react_default","a","createElement","className","src","logo","alt","onChange","map","source","key","id","value","name","NewsItem","image","title","description","url","href","target","rel","WrapperNews","News_templateObject","News","data","article","index","components_NewsItem","urlToImage","WeatherDiv","WeatherWidget_templateObject","WeatherItem","WeatherWidget_templateObject2","WeatherText","span","_templateObject3","WeatherImage","_templateObject4","WeatherDay","_templateObject5","Chevron","_templateObject6","chevronImg","WeatherWidget","weatherWidgetOpen","clickHandler","weatherParams","list","days","dateee","Date","getDay","style","height","onClick","dt","concat","weather","icon","Math","floor","temp","day","Loader","App","apiKeyNews","newsSelectedSource","newsData","newsSources","apiKeyWeather","selectedCity","weatherData","showGrid","e","targetValue","_this","setState","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","t1","getNewsData","t2","sent","t3","call","t4","stop","this","handleWidget","prevState","props","_this2","_callee2","_context2","getSource","getWeatherData","t5","axios","res","sources","articles","components_Nav","components_News","components_loader","components_WeatherWidget","React","Component","rootElement","document","getElementById","ReactDOM","render","src_App","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d4b0abf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lazi.1e4930e1.png\";","module.exports = __webpack_public_path__ + \"static/media/up-arrow.07737735.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../images/lazi.png\";\n\n// import \"../css/styles.css\";\nconst NavLogo = styled.div`\n  width: 40px;\n  height: 40px;\n  display: inline-block;\n`;\nconst NavLogoImg = styled.img`\n  width: 100%;\n`;\n\nconst Nav = ({ handleSourceChange, sourceList }) => {\n  return (\n    <nav className=\"nav\">\n      <NavLogo>\n        <NavLogoImg src={logo} alt=\"\" />\n      </NavLogo>\n      {sourceList && (\n        <select onChange={handleSourceChange}>\n          {sourceList.map(source => {\n            return (\n              <option key={source.id} value={source.id}>\n                {source.name}\n              </option>\n            );\n          })}\n        </select>\n      )}\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nimport \"../css/styles.css\";\n\nconst NewsItem = ({ image, title, description, url }) => (\n  <div className=\"news__item card\">\n    <div className=\"card-image\">\n      <img src={image} alt=\"news\" />\n      <a\n        className=\"btn-floating halfway-fab waves-effect waves-light red\"\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <i className=\"material-icons\">arrow_forward</i>\n      </a>\n    </div>\n    <div className=\"card-content\">\n      <span className=\"card-title\">{title}</span>\n      <p>{description}</p>\n    </div>\n  </div>\n);\n\nexport default NewsItem;\n","import React from \"react\";\nimport NewsItem from \"./NewsItem\";\nimport styled from \"styled-components\";\n\nimport \"../css/styles.css\";\n\nconst WrapperNews = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst News = ({ data }) => {\n  return (\n    <WrapperNews>\n      {data.map((article, index) => {\n        return (\n          <NewsItem\n            image={article.urlToImage}\n            title={article.title}\n            description={article.description}\n            url={article.url}\n            key={index}\n          />\n        );\n      })}\n    </WrapperNews>\n  );\n};\n\nexport default News;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport chevronImg from \"../images/up-arrow.svg\";\n\nconst WeatherDiv = styled.div`\n  height: 0px;\n  color: white;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  background-color: #a52a2a;\n  z-index: 3;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: space-around;\n  transition: all 300ms ease;\n`;\n\nconst WeatherItem = styled.div``;\nconst WeatherText = styled.span`\n  display: inline-block;\n`;\nconst WeatherImage = styled.img`\n  width: 40px;\n`;\nconst WeatherDay = styled.span`\n  display: block;\n`;\nconst Chevron = styled.div`\n  background-image: url(${chevronImg});\n  background-repeat: no-repeat;\n  background-size: 50%;\n  background-position: center;\n  width: 40px;\n  height: 40px;\n  position: absolute;\n  right: 8px;\n  top: -40px;\n  z-index: 57;\n  background-color: #a52a2a;\n  border-radius-left: 5px;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nconst WeatherWidget = ({ data, weatherWidgetOpen, clickHandler }) => {\n  let weatherParams = data.list;\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  let dateee = new Date().getDay();\n  // console.log(days[dateee]);\n\n  return (\n    <WeatherDiv\n      style={weatherWidgetOpen ? { height: \"70px\" } : { height: \"0\" }}\n      onClick={clickHandler}\n    >\n      {weatherParams.map((value, index) => (\n        <WeatherItem key={value.dt}>\n          <WeatherImage\n            src={`http://openweathermap.org/img/w/${value.weather[0].icon}.png`}\n            alt=\"Weather icon\"\n          />\n          <WeatherText>{Math.floor(value.temp.day)}&#8451;</WeatherText>\n          <WeatherDay>{days[dateee++]}</WeatherDay>\n        </WeatherItem>\n      ))}\n      <Chevron />\n    </WeatherDiv>\n  );\n};\n\nexport default WeatherWidget;\n","import React from \"react\";\nimport \"../css/loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"lds-ellipsis\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n\nimport * as serviceWorker from './serviceWorker';\n\nimport Nav from \"./components/Nav\";\nimport News from \"./components/News\";\nimport WeatherWidget from \"./components/WeatherWidget\";\n\nimport Loader from \"./components/loader\";\n\nimport \"./css/styles.css\";\nimport \"./css/materialize.css\";\n\nclass App extends React.Component {\n  state = {\n    apiKeyNews: \"77aaa40707ae48e6913523b88e3bf60c\",\n    newsSelectedSource: \"cnn\",\n    newsData: null,\n    newsSources: null,\n\n    apiKeyWeather: \"f5cbece53f9805de76ff787b7dddb949\",\n    selectedCity: \"novi beograd\",\n    weatherData: null,\n\n    showGrid: true,\n\n    weatherWidgetOpen: false\n  };\n\n  componentDidMount() {\n    if (!this.state.newsData) {\n      (async () => {\n        try {\n          this.setState({\n            newsData: await this.getNewsData(),\n            newsSources: await this.getSource(),\n            weatherData: await this.getWeatherData()\n          });\n        } catch (e) {\n          console.log(\"erorcina\", e);\n        }\n      })();\n    }\n    // console.log(\"mount\");\n  }\n\n  async getSource() {\n    const res = await axios(\"https://newsapi.org/v1/sources\");\n    return await res.data.sources;\n  }\n  // get news data\n  async getNewsData(source = this.state.newsSelectedSource) {\n    const res = await axios(\n      `https://newsapi.org/v2/top-headlines?sources=${source}&apiKey=${\n        this.state.apiKeyNews\n      }`\n    );\n    return await res.data.articles;\n  }\n\n  // get weather data\n  async getWeatherData(source = this.state.selectedCity) {\n    const res = await axios(\n      `https://api.openweathermap.org/data/2.5/forecast/daily?q=${source}&units=metric&APPID=${\n        this.state.apiKeyWeather\n      }&cnt=3`\n    );\n    return await res.data;\n  }\n\n  // handlers\n  handleSourceChange = e => {\n    let targetValue = e.target.value;\n    this.setState({\n      showGrid: false\n    });\n    (async () => {\n      try {\n        this.setState({\n          newsSelectedSource: targetValue,\n          newsData: await this.getNewsData(targetValue),\n          showGrid: true\n        });\n      } catch (e) {\n        console.log(\"erorcina\", e);\n      }\n    })();\n  };\n  handleWidget = e => {\n    this.setState((prevState, props) => {\n      return { weatherWidgetOpen: !prevState.weatherWidgetOpen };\n    });\n  };\n  // render\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav\n          sourceList={this.state.newsSources}\n          handleSourceChange={this.handleSourceChange}\n        />\n        <div className=\"container\">\n          {this.state.newsData && this.state.showGrid ? (\n            <News data={this.state.newsData} />\n          ) : (\n            <Loader />\n          )}\n        </div>\n        {this.state.weatherData && (\n          <WeatherWidget\n            data={this.state.weatherData}\n            weatherWidgetOpen={this.state.weatherWidgetOpen}\n            clickHandler={this.handleWidget}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\nserviceWorker.register();\n"],"sourceRoot":""}